// <auto-generated />
using System;
using DiscordBot.Database.RandomGame;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscordBot.Database.RandomGame.Mirgrations
{
    [DbContext(typeof(RandomGameContext))]
    partial class RandomGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("DiscordBot.Database.RandomGame.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysToRun")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GuildId")
                        .HasColumnType("TEXT");

                    b.Property<int>("MinutesBetweenRequest")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DiscordBot.Database.RandomGame.Models.GameScore", b =>
                {
                    b.Property<Guid>("GameScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<long>("NextScoreDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("userGuid")
                        .HasColumnType("TEXT");

                    b.HasKey("GameScoreId");

                    b.HasIndex("GameId");

                    b.ToTable("GameScores");
                });

            modelBuilder.Entity("DiscordBot.Database.RandomGame.Models.GameScore", b =>
                {
                    b.HasOne("DiscordBot.Database.RandomGame.Models.Game", "Game")
                        .WithMany("GameScores")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("DiscordBot.Database.RandomGame.Models.Game", b =>
                {
                    b.Navigation("GameScores");
                });
#pragma warning restore 612, 618
        }
    }
}
